@page
@model IndexModel
@using Microsoft.AspNetCore.Identity
@using FreshFarmMarket.Model
@using FreshFarmMarket.Services
@inject SignInManager<CustomIdentityUser> SignInManager
@inject UserManager<CustomIdentityUser> UserManager
@inject EncryptionService EncryptionService

@{
    ViewData["Title"] = "Home Page";
}

<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <style>
        .data-box {
            max-width: 600px;
            margin: 20px auto 80px; /* Increased bottom margin */
            padding: 20px;
            background: #fff;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Outer shadow */
            border-radius: 10px;
        }

        .data-table {
            width: 100%;
        }

            .data-table td {
                padding: 10px 15px;
                vertical-align: middle;
            }

        .data-label {
            font-weight: bold;
            width: 180px;
            text-align: right;
            white-space: nowrap;
        }

        .data-value {
            text-align: left;
            word-break: break-word;
        }

        .data-table tr {
            border-bottom: none; /* Makes borders invisible */
        }

        .profile-photo {
            max-width: 150px;
            border-radius: 10px;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
        }
    </style>
</head>

<div class="text-center">
    <h1 class="display-4">Welcome to FreshFarmMarket!</h1>

    @if (SignInManager.IsSignedIn(User))
    {
        var currentUser = await UserManager.GetUserAsync(User);
        <p class="mt-3">You are logged in as: <strong>@currentUser?.FullName</strong></p>

        <div class="data-box">
            <table class="data-table">
                <tr>
                    <td class="data-label">Your email is:</td>
                    <td class="data-value">@currentUser?.Email</td>
                </tr>
                <tr>
                    <td class="data-label">Your gender is:</td>
                    <td class="data-value">@currentUser?.Gender</td>
                </tr>
                <tr>
                    <td class="data-label">Your phone number is:</td>
                    <td class="data-value">@EncryptionService.Decrypt(currentUser?.PhoneNumber)</td>
                </tr>
                <tr>
                    <td class="data-label">Your delivery address is:</td>
                    <td class="data-value">@EncryptionService.Decrypt(currentUser?.DeliveryAddress)</td>
                </tr>
                <tr>
                    <td class="data-label">Your credit card number is:</td>
                    <td class="data-value">@EncryptionService.Decrypt(currentUser?.CreditCardNo)</td>
                </tr>
                <tr>
                    <td class="data-label">About you:</td>
                    <td class="data-value">@currentUser?.AboutMe</td>
                </tr>
                <tr>
                    <td class="data-label">Your photo:</td>
                    <td class="data-value">
                        @if (!string.IsNullOrEmpty(currentUser?.PhotoPath))
                        {
                            <img src="@Url.Content(currentUser.PhotoPath)" alt="Profile Photo" class="profile-photo" />
                        }
                        else
                        {
                            <span>No photo uploaded</span>
                        }
                    </td>
                </tr>
            </table>
        </div>
    }
    else
    {
        <p>You are <strong>not</strong> signed in. <a asp-page="/Login">Login here</a></p>
    }
</div>

<!-- Modal -->
<div class="modal fade" id="sessionExpireModal" tabindex="-1" aria-labelledby="sessionExpireModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="sessionExpireModalLabel">Your session is about to expire</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Your session will expire in <span id="countdown">10</span> seconds! Do you want to continue your session or log out?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="continueSessionButton">Continue Session</button>
                <button type="button" class="btn btn-danger" id="logoutButton">Log Out</button>
            </div>
        </div>
    </div>
</div>

@if (SignInManager.IsSignedIn(User))
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var countdownTime = 10;
            var countdownElement = document.getElementById("countdown");
            var sessionExpireModal = new bootstrap.Modal(document.getElementById("sessionExpireModal"));

            // Show modal after 30 seconds
            setTimeout(function () {
                sessionExpireModal.show();

                var countdownInterval = setInterval(function () {
                    countdownElement.textContent = countdownTime;
                    countdownTime--;

                    if (countdownTime < 0) {
                        clearInterval(countdownInterval);
                        // Clear session and authentication cookies
                        fetch('/Account/ClearSession', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                        }).then(() => {
                            window.location.href = '/Login'; // Redirect to login after countdown
                        });
                    }
                }, 1000);
            }, 30000); // Show modal after 30 seconds

            // Continue session on button click
            document.getElementById("continueSessionButton").addEventListener("click", function () {
                var modalInstance = bootstrap.Modal.getInstance(document.getElementById("sessionExpireModal"));
                modalInstance.hide();
                // Reset session timeout here if needed
            });

            // Log out on button click
            document.getElementById("logoutButton").addEventListener("click", function () {
                fetch('/Account/ClearSession', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                }).then(() => {
                    window.location.href = '/Logout?sessionExpired=true';
                });
            });
        });
    </script>
}
